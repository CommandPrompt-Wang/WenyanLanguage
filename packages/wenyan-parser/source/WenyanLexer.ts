// Generated from packages/Wenyan.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from 'antlr4ts/atn/ATN'
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer'
import { CharStream } from 'antlr4ts/CharStream'
import { Lexer } from 'antlr4ts/Lexer'
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator'
import { NotNull } from 'antlr4ts/Decorators'
import { Override } from 'antlr4ts/Decorators'
import { RuleContext } from 'antlr4ts/RuleContext'
import { Vocabulary } from 'antlr4ts/Vocabulary'
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl'

import * as Utils from 'antlr4ts/misc/Utils'


export class WenyanLexer extends Lexer {
    public static readonly If = 1
    public static readonly EndDeclare = 2
    public static readonly Else = 3
    public static readonly Return = 4
    public static readonly DeclareModule = 5
    public static readonly RanameAs = 6
    public static readonly Left5 = 7
    public static readonly Right5 = 8
    public static readonly Left6 = 9
    public static readonly Right6 = 10
    public static readonly Variable = 11
    public static readonly Left = 12
    public static readonly Right = 13
    public static readonly Left4 = 14
    public static readonly Right4 = 15
    public static readonly Apply = 16
    public static readonly At = 17
    public static readonly StackIn = 18
    public static readonly Take = 19
    public static readonly StackPop = 20
    public static readonly Get = 21
    public static readonly The = 22
    public static readonly End = 23
    public static readonly FunctionStart = 24
    public static readonly FunctionEnd = 25
    public static readonly VariableStart = 26
    public static readonly VariableEnd = 27
    public static readonly DeclareMethod = 28
    public static readonly ThisIs = 29
    public static readonly Is = 30
    public static readonly Said = 31
    public static readonly MethodOf = 32
    public static readonly EndStatment = 33
    public static readonly IHave = 34
    public static readonly NameAs = 35
    public static readonly ValueIs = 36
    public static readonly DeclareString = 37
    public static readonly DeclareStringIs = 38
    public static readonly StringEmpty = 39
    public static readonly StringEscape1 = 40
    public static readonly StringEscape2 = 41
    public static readonly StringEscape3 = 42
    public static readonly DeclareDigit = 43
    public static readonly DeclareDigitIs = 44
    public static readonly IntegerDigit = 45
    public static readonly FloatDigit = 46
    public static readonly IntegerDigitCN = 47
    public static readonly FloatDigitCN = 48
    public static readonly DeclareBoolean = 49
    public static readonly DeclareBooleanIs = 50
    public static readonly Boolean = 51
    public static readonly TRUE = 52
    public static readonly FALSE = 53
    public static readonly Equal = 54
    public static readonly Unequal = 55
    public static readonly Identifier = 56
    public static readonly Character = 57
    public static readonly LineComment = 58
    public static readonly PartComment = 59
    public static readonly WhiteSpace = 60

    // tslint:disable:no-trailing-whitespace
    public static readonly channelNames: string[] = [
        'DEFAULT_TOKEN_CHANNEL', 'HIDDEN',
    ]

    // tslint:disable:no-trailing-whitespace
    public static readonly modeNames: string[] = [
        'DEFAULT_MODE',
    ]

    public static readonly ruleNames: string[] = [
        'If', 'EndDeclare', 'Else', 'Return', 'Ruo', 'Fei', 'Nai', 'De', 'Zhe', 
        'DeclareModule', 'RanameAs', 'Left5', 'Right5', 'Left6', 'Right6', 'Zai', 
        'Shu3', 'Variable', 'Left', 'Right', 'Left4', 'Right4', 'Apply', 'At', 
        'StackIn', 'Take', 'StackPop', 'Get', 'Shi2', 'Ru', 'Qiu', 'Qu', 'De2', 
        'The', 'End', 'Yun', 'FunctionStart', 'FunctionEnd', 'VariableStart', 
        'VariableEnd', 'Yu2', 'Xing', 'DeclareMethod', 'Shu2', 'ThisIs', 'Is', 
        'Said', 'MethodOf', 'Shi', 'Of', 'Ye', 'EndStatment', 'IHave', 'Jin', 
        'Wu', 'Zi', 'You', 'You2', 'Yi', 'NameAs', 'ValueIs', 'Ming', 'Zhi', 'Yue', 
        'Ci', 'Suo', 'Wei', 'DeclareString', 'DeclareStringIs', 'Yan', 'StringEmpty', 
        'StringEscape1', 'StringEscape2', 'StringEscape3', 'Left2', 'Right2', 
        'Left3', 'Right3', 'String2', 'NonEscape1', 'NonEscape2', 'NonEscape3', 
        'DeclareDigit', 'DeclareDigitIs', 'Shu', 'IntegerDigit', 'FloatDigit', 
        'IntegerDigitCN', 'FloatDigitCN', 'DeclareBoolean', 'DeclareBooleanIs', 
        'Bo', 'Boolean', 'TRUE', 'FALSE', 'Equal', 'Unequal', 'Bu', 'Den', 'Yu', 
        'Identifier', 'Character', 'ForbiddenHead', 'LineComment', 'PartComment', 
        'WhiteSpace', 'CommentStart', 'Comment', 'UnicodeWhiteSpace', 'Delimiter',
    ]

    private static readonly _LITERAL_NAMES: Array<string | undefined> = [
        undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
        "'\u300A'", "'\u300B'", "'<<'", "'>>'", undefined, "'['", "']'", "'\u300C'", 
        "'\u300D'",
    ]
    private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
        undefined, 'If', 'EndDeclare', 'Else', 'Return', 'DeclareModule', 'RanameAs', 
        'Left5', 'Right5', 'Left6', 'Right6', 'Variable', 'Left', 'Right', 'Left4', 
        'Right4', 'Apply', 'At', 'StackIn', 'Take', 'StackPop', 'Get', 'The', 
        'End', 'FunctionStart', 'FunctionEnd', 'VariableStart', 'VariableEnd', 
        'DeclareMethod', 'ThisIs', 'Is', 'Said', 'MethodOf', 'EndStatment', 'IHave', 
        'NameAs', 'ValueIs', 'DeclareString', 'DeclareStringIs', 'StringEmpty', 
        'StringEscape1', 'StringEscape2', 'StringEscape3', 'DeclareDigit', 'DeclareDigitIs', 
        'IntegerDigit', 'FloatDigit', 'IntegerDigitCN', 'FloatDigitCN', 'DeclareBoolean', 
        'DeclareBooleanIs', 'Boolean', 'TRUE', 'FALSE', 'Equal', 'Unequal', 'Identifier', 
        'Character', 'LineComment', 'PartComment', 'WhiteSpace',
    ]
    public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(WenyanLexer._LITERAL_NAMES, WenyanLexer._SYMBOLIC_NAMES, [])

    // @Override
    // @NotNull
    public get vocabulary(): Vocabulary {
        return WenyanLexer.VOCABULARY
    }
    // tslint:enable:no-trailing-whitespace


    constructor(input: CharStream) {
        super(input)
        this._interp = new LexerATNSimulator(WenyanLexer._ATN, this)
    }

    // @Override
    public get grammarFileName(): string { return 'Wenyan.g4' }

    // @Override
    public get ruleNames(): string[] { return WenyanLexer.ruleNames }

    // @Override
    public get serializedATN(): string { return WenyanLexer._serializedATN }

    // @Override
    public get channelNames(): string[] { return WenyanLexer.channelNames }

    // @Override
    public get modeNames(): string[] { return WenyanLexer.modeNames }

    private static readonly _serializedATNSegments: number = 2
    private static readonly _serializedATNSegment0: string =
        '\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02>\u026A\b\x01' +
        '\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06' +
        '\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r' +
        '\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t' +
        '\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t' +
        '\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t' +
        '\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04"\t' +
        "\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
        '+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04' +
        '4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04' +
        '=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04' +
        'F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04M\tM\x04N\tN\x04' +
        'O\tO\x04P\tP\x04Q\tQ\x04R\tR\x04S\tS\x04T\tT\x04U\tU\x04V\tV\x04W\tW\x04' +
        'X\tX\x04Y\tY\x04Z\tZ\x04[\t[\x04\\\t\\\x04]\t]\x04^\t^\x04_\t_\x04`\t' +
        '`\x04a\ta\x04b\tb\x04c\tc\x04d\td\x04e\te\x04f\tf\x04g\tg\x04h\th\x04' +
        'i\ti\x04j\tj\x04k\tk\x04l\tl\x04m\tm\x04n\tn\x04o\to\x03\x02\x03\x02\x03' +
        '\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x06\x03' +
        '\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x05' +
        '\v\xF6\n\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\r\x03\r\x03\x0E' +
        '\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11' +
        '\x03\x12\x03\x12\x03\x13\x03\x13\x06\x13\u010F\n\x13\r\x13\x0E\x13\u0110' +
        '\x03\x13\x03\x13\x03\x13\x03\x13\x06\x13\u0117\n\x13\r\x13\x0E\x13\u0118' +
        '\x03\x13\x03\x13\x05\x13\u011D\n\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03' +
        '\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03' +
        '\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03' +
        '\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03"\x03"\x03#\x03#\x03$\x03$\x03$' +
        "\x03%\x03%\x03&\x03&\x03&\x03&\x03\'\x03\'\x03\'\x03\'\x03(\x03(\x03(" +
        '\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03)\x03)\x03)\x03*\x03*\x03+\x03' +
        '+\x03,\x03,\x03,\x03-\x03-\x03.\x03.\x03.\x03/\x03/\x030\x030\x031\x03' +
        '1\x031\x031\x032\x032\x033\x033\x034\x034\x035\x055\u0174\n5\x035\x03' +
        '5\x036\x036\x036\x036\x036\x056\u017D\n6\x036\x036\x056\u0181\n6\x037' +
        '\x037\x038\x038\x039\x039\x03:\x03:\x03;\x03;\x03<\x03<\x03=\x03=\x05' +
        '=\u0191\n=\x03=\x03=\x03=\x03=\x03=\x05=\u0198\n=\x03=\x05=\u019B\n=\x03' +
        '=\x03=\x03=\x03=\x03=\x03=\x05=\u01A3\n=\x05=\u01A5\n=\x03>\x03>\x03?' +
        '\x03?\x03@\x03@\x03A\x03A\x03B\x03B\x03C\x03C\x03D\x03D\x03E\x03E\x03' +
        'E\x03F\x03F\x05F\u01BA\nF\x03G\x03G\x03H\x03H\x03H\x03H\x03H\x03H\x03' +
        'H\x03H\x03H\x05H\u01C7\nH\x03I\x03I\x06I\u01CB\nI\rI\x0EI\u01CC\x03I\x03' +
        'I\x03J\x03J\x06J\u01D3\nJ\rJ\x0EJ\u01D4\x03J\x03J\x03K\x03K\x06K\u01DB' +
        '\nK\rK\x0EK\u01DC\x03K\x03K\x03L\x03L\x03L\x03M\x03M\x03M\x03N\x03N\x03' +
        'O\x03O\x03P\x03P\x03Q\x03Q\x03Q\x05Q\u01F0\nQ\x03R\x03R\x03R\x05R\u01F5' +
        '\nR\x03S\x03S\x03S\x05S\u01FA\nS\x03T\x03T\x03T\x03U\x03U\x05U\u0201\n' +
        'U\x03V\x03V\x03W\x03W\x03X\x03X\x05X\u0209\nX\x03Y\x03Y\x03Z\x03Z\x05' +
        'Z\u020F\nZ\x03[\x03[\x03[\x03\\\x03\\\x05\\\u0216\n\\\x03]\x03]\x03^\x03' +
        '^\x05^\u021C\n^\x03_\x03_\x03`\x03`\x03a\x03a\x03a\x03a\x05a\u0226\na' +
        '\x03b\x03b\x03b\x03b\x03b\x03b\x03b\x05b\u022F\nb\x03c\x03c\x03d\x03d' +
        '\x03e\x03e\x03f\x03f\x07f\u0239\nf\ff\x0Ef\u023C\vf\x03g\x05g\u023F\n' +
        'g\x03h\x03h\x03i\x03i\x07i\u0245\ni\fi\x0Ei\u0248\vi\x03i\x03i\x03j\x03' +
        'j\x07j\u024E\nj\fj\x0Ej\u0251\vj\x03j\x03j\x03j\x03j\x03k\x06k\u0258\n' +
        'k\rk\x0Ek\u0259\x03k\x03k\x03l\x03l\x03l\x03m\x03m\x03m\x03n\x03n\x05' +
        'n\u0266\nn\x03o\x05o\u0269\no\x04\u01CC\u024F\x02\x02p\x03\x02\x03\x05' +
        '\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x02\r\x02\x02\x0F\x02\x02\x11\x02' +
        '\x02\x13\x02\x02\x15\x02\x07\x17\x02\b\x19\x02\t\x1B\x02\n\x1D\x02\v\x1F' +
        "\x02\f!\x02\x02#\x02\x02%\x02\r\'\x02\x0E)\x02\x0F+\x02\x10-\x02\x11/" +
        '\x02\x121\x02\x133\x02\x145\x02\x157\x02\x169\x02\x17;\x02\x02=\x02\x02' +
        '?\x02\x02A\x02\x02C\x02\x02E\x02\x18G\x02\x19I\x02\x02K\x02\x1AM\x02\x1B' +
        'O\x02\x1CQ\x02\x1DS\x02\x02U\x02\x02W\x02\x1EY\x02\x02[\x02\x1F]\x02 ' +
        '_\x02!a\x02"c\x02\x02e\x02\x02g\x02\x02i\x02#k\x02$m\x02\x02o\x02\x02' +
        'q\x02\x02s\x02\x02u\x02\x02w\x02\x02y\x02%{\x02&}\x02\x02\x7F\x02\x02' +
        "\x81\x02\x02\x83\x02\x02\x85\x02\x02\x87\x02\x02\x89\x02\'\x8B\x02(\x8D" +
        '\x02\x02\x8F\x02)\x91\x02*\x93\x02+\x95\x02,\x97\x02\x02\x99\x02\x02\x9B' +
        '\x02\x02\x9D\x02\x02\x9F\x02\x02\xA1\x02\x02\xA3\x02\x02\xA5\x02\x02\xA7' +
        '\x02-\xA9\x02.\xAB\x02\x02\xAD\x02/\xAF\x020\xB1\x021\xB3\x022\xB5\x02' +
        '3\xB7\x024\xB9\x02\x02\xBB\x025\xBD\x026\xBF\x027\xC1\x028\xC3\x029\xC5' +
        '\x02\x02\xC7\x02\x02\xC9\x02\x02\xCB\x02:\xCD\x02;\xCF\x02\x02\xD1\x02' +
        '<\xD3\x02=\xD5\x02>\xD7\x02\x02\xD9\x02\x02\xDB\x02\x02\xDD\x02\x02\x03' +
        '\x02\x15\x04\x02\u4E68\u4E68\u66FA\u66FA\x04\x02\u4E93\u4E93\u96F4\u96F4' +
        '\x04\x02\u6731\u6731\u8855\u8855\x04\x02\u8B04\u8B04\u8C15\u8C15\n\x02' +
        '$$12^^ddhhppttvv\x03\x02^^\x04\x02\u6572\u6572\u657A\u657A\x03\x022;\x03' +
        '\x0200\x12\x02\u4E02\u4E02\u4E05\u4E05\u4E09\u4E09\u4E0B\u4E0B\u4E5F\u4E5F' +
        '\u4E8E\u4E8E\u4E96\u4E96\u4EC1\u4EC1\u5148\u5148\u516D\u516D\u516F\u516F' +
        '\u5343\u5343\u5345\u5345\u56DD\u56DD\u7680\u7680\u96F8\u96F8\x05\x02\u53CA' +
        '\u53CA\u670B\u670B\u70BB\u70BB\x04\x02\u9635\u9635\u967F\u967F\x04\x02' +
        '\u9636\u9636\u9672\u9672\x04\x02\u4E90\u4E90\u65BE\u65BE\x1F\x02\x02\u2E81' +
        '\u3002\u3041\u4E02\u4E02\u4E05\u4E05\u4E09\u4E09\u4E0B\u4E0B\u4E5F\u4E5F' +
        '\u4E8E\u4E8E\u4E96\u4E96\u4EC1\u4EC1\u5106\u5106\u5148\u5148\u516D\u516D' +
        '\u516F\u516F\u5343\u5343\u5345\u5345\u5440\u5440\u56DD\u56DD\u58FB\u58FB' +
        '\u66F2\u66F2\u670B\u670B\u7680\u7680\u82E7\u82E7\u842E\u842E\u9635\u9636' +
        '\u9672\u9672\u967F\u967F\u96F8\u96F8\uFF03\uFF13\x04\x02\f\f\x0F\x0F\x05' +
        '\x02\u627B\u627B\u6CEA\u6CEA\u7591\u7591\f\x02\v\x0F""\x87\x87\xA2\xA2' +
        '\u1682\u1682\u2002\u200C\u202A\u202B\u2031\u2031\u2061\u2061\u3002\u3002' +
        '\n\x02##..00==AA\u3004\u3004\uFF03\uFF03\uFF0E\uFF0E\x03<\x02C\x02\\\x02' +
        'c\x02|\x02\xAC\x02\xAC\x02\xBC\x02\xBC\x02\xC2\x02\xD8\x02\xDA\x02\xF8' +
        '\x02\xFA\x02\u02BA\x02\u02E2\x02\u02E6\x02\u1D02\x02\u1D27\x02\u1D2E\x02' +
        '\u1D5E\x02\u1D64\x02\u1D67\x02\u1D6D\x02\u1D79\x02\u1D7B\x02\u1DC0\x02' +
        '\u1E02\x02\u1F01\x02\u2073\x02\u2073\x02\u2081\x02\u2081\x02\u2092\x02' +
        '\u209E\x02\u212C\x02\u212D\x02\u2134\x02\u2134\x02\u2150\x02\u2150\x02' +
        '\u2162\x02\u218A\x02\u2C62\x02\u2C81\x02\u2E82\x02\u2E9B\x02\u2E9D\x02' +
        '\u2EF5\x02\u2F02\x02\u2FD7\x02\u3007\x02\u3007\x02\u3009\x02\u3009\x02' +
        '\u3023\x02\u302B\x02\u303A\x02\u303D\x02\u3043\x02\u3098\x02\u309F\x02' +
        '\u30A1\x02\u30A3\x02\u30FC\x02\u30FF\x02\u3101\x02\u31F2\x02\u3201\x02' +
        '\u32D2\x02\u3300\x02\u3302\x02\u3359\x02\u3402\x02\u4DB7\x02\u4E02\x02' +
        '\u9FD7\x02\uA724\x02\uA789\x02\uA78D\x02\uA7B0\x02\uA7B2\x02\uA7B9\x02' +
        '\uA7F9\x02\uA801\x02\uAB32\x02\uAB5C\x02\uAB5E\x02\uAB66\x02\uF902\x02' +
        '\uFA6F\x02\uFA72\x02\uFADB\x02\uFB02\x02\uFB08\x02\uFF23\x02\uFF3C\x02' +
        '\uFF43\x02\uFF5C\x02\uFF68\x02\uFF71\x02\uFF73\x02\uFF9F\x02\uB002\x03' +
        '\uB003\x03\uF202\x03\uF202\x03\x02\x04\uA6D8\x04\uA702\x04\uB736\x04\uB742' +
        '\x04\uB81F\x04\uB822\x04\uCEA3\x04\uF802\x04\uFA1F\x04\u025F\x02\x03\x03' +
        '\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03' +
        '\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03' +
        '\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03' +
        "\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02" +
        '\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x02' +
        '1\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02' +
        '\x02\x02\x029\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02' +
        '\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03' +
        '\x02\x02\x02\x02W\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02\x02' +
        '\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02i\x03\x02\x02\x02\x02' +
        'k\x03\x02\x02\x02\x02y\x03\x02\x02\x02\x02{\x03\x02\x02\x02\x02\x89\x03' +
        '\x02\x02\x02\x02\x8B\x03\x02\x02\x02\x02\x8F\x03\x02\x02\x02\x02\x91\x03' +
        '\x02\x02\x02\x02\x93\x03\x02\x02\x02\x02\x95\x03\x02\x02\x02\x02\xA7\x03' +
        '\x02\x02\x02\x02\xA9\x03\x02\x02\x02\x02\xAD\x03\x02\x02\x02\x02\xAF\x03' +
        '\x02\x02\x02\x02\xB1\x03\x02\x02\x02\x02\xB3\x03\x02\x02\x02\x02\xB5\x03' +
        '\x02\x02\x02\x02\xB7\x03\x02\x02\x02\x02\xBB\x03\x02\x02\x02\x02\xBD\x03' +
        '\x02\x02\x02\x02\xBF\x03\x02\x02\x02\x02\xC1\x03\x02\x02\x02\x02\xC3\x03' +
        '\x02\x02\x02\x02\xCB\x03\x02\x02\x02\x02\xCD\x03\x02\x02\x02\x02\xD1\x03' +
        '\x02\x02\x02\x02\xD3\x03\x02\x02\x02\x02\xD5\x03\x02\x02\x02\x03\xDF\x03' +
        '\x02\x02\x02\x05\xE1\x03\x02\x02\x02\x07\xE3\x03\x02\x02\x02\t\xE6\x03' +
        '\x02\x02\x02\v\xE9\x03\x02\x02\x02\r\xEB\x03\x02\x02\x02\x0F\xED\x03\x02' +
        '\x02\x02\x11\xEF\x03\x02\x02\x02\x13\xF1\x03\x02\x02\x02\x15\xF3\x03\x02' +
        '\x02\x02\x17\xFB\x03\x02\x02\x02\x19\xFE\x03\x02\x02\x02\x1B\u0100\x03' +
        '\x02\x02\x02\x1D\u0102\x03\x02\x02\x02\x1F\u0105\x03\x02\x02\x02!\u0108' +
        "\x03\x02\x02\x02#\u010A\x03\x02\x02\x02%\u011C\x03\x02\x02\x02\'\u011E" +
        '\x03\x02\x02\x02)\u0120\x03\x02\x02\x02+\u0122\x03\x02\x02\x02-\u0124' +
        '\x03\x02\x02\x02/\u0126\x03\x02\x02\x021\u0128\x03\x02\x02\x023\u012A' +
        '\x03\x02\x02\x025\u012C\x03\x02\x02\x027\u012E\x03\x02\x02\x029\u0130' +
        '\x03\x02\x02\x02;\u0132\x03\x02\x02\x02=\u0134\x03\x02\x02\x02?\u0136' +
        '\x03\x02\x02\x02A\u0138\x03\x02\x02\x02C\u013A\x03\x02\x02\x02E\u013C' +
        '\x03\x02\x02\x02G\u013E\x03\x02\x02\x02I\u0141\x03\x02\x02\x02K\u0143' +
        '\x03\x02\x02\x02M\u0147\x03\x02\x02\x02O\u014B\x03\x02\x02\x02Q\u0155' +
        '\x03\x02\x02\x02S\u0158\x03\x02\x02\x02U\u015A\x03\x02\x02\x02W\u015C' +
        '\x03\x02\x02\x02Y\u015F\x03\x02\x02\x02[\u0161\x03\x02\x02\x02]\u0164' +
        '\x03\x02\x02\x02_\u0166\x03\x02\x02\x02a\u0168\x03\x02\x02\x02c\u016C' +
        '\x03\x02\x02\x02e\u016E\x03\x02\x02\x02g\u0170\x03\x02\x02\x02i\u0173' +
        '\x03\x02\x02\x02k\u017C\x03\x02\x02\x02m\u0182\x03\x02\x02\x02o\u0184' +
        '\x03\x02\x02\x02q\u0186\x03\x02\x02\x02s\u0188\x03\x02\x02\x02u\u018A' +
        '\x03\x02\x02\x02w\u018C\x03\x02\x02\x02y\u01A4\x03\x02\x02\x02{\u01A6' +
        '\x03\x02\x02\x02}\u01A8\x03\x02\x02\x02\x7F\u01AA\x03\x02\x02\x02\x81' +
        '\u01AC\x03\x02\x02\x02\x83\u01AE\x03\x02\x02\x02\x85\u01B0\x03\x02\x02' +
        '\x02\x87\u01B2\x03\x02\x02\x02\x89\u01B4\x03\x02\x02\x02\x8B\u01B7\x03' +
        '\x02\x02\x02\x8D\u01BB\x03\x02\x02\x02\x8F\u01C6\x03\x02\x02\x02\x91\u01C8' +
        '\x03\x02\x02\x02\x93\u01D0\x03\x02\x02\x02\x95\u01D8\x03\x02\x02\x02\x97' +
        '\u01E0\x03\x02\x02\x02\x99\u01E3\x03\x02\x02\x02\x9B\u01E6\x03\x02\x02' +
        '\x02\x9D\u01E8\x03\x02\x02\x02\x9F\u01EA\x03\x02\x02\x02\xA1\u01EF\x03' +
        '\x02\x02\x02\xA3\u01F4\x03\x02\x02\x02\xA5\u01F9\x03\x02\x02\x02\xA7\u01FB' +
        '\x03\x02\x02\x02\xA9\u01FE\x03\x02\x02\x02\xAB\u0202\x03\x02\x02\x02\xAD' +
        '\u0204\x03\x02\x02\x02\xAF\u0208\x03\x02\x02\x02\xB1\u020A\x03\x02\x02' +
        '\x02\xB3\u020E\x03\x02\x02\x02\xB5\u0210\x03\x02\x02\x02\xB7\u0213\x03' +
        '\x02\x02\x02\xB9\u0217\x03\x02\x02\x02\xBB\u021B\x03\x02\x02\x02\xBD\u021D' +
        '\x03\x02\x02\x02\xBF\u021F\x03\x02\x02\x02\xC1\u0225\x03\x02\x02\x02\xC3' +
        '\u022E\x03\x02\x02\x02\xC5\u0230\x03\x02\x02\x02\xC7\u0232\x03\x02\x02' +
        '\x02\xC9\u0234\x03\x02\x02\x02\xCB\u0236\x03\x02\x02\x02\xCD\u023E\x03' +
        '\x02\x02\x02\xCF\u0240\x03\x02\x02\x02\xD1\u0242\x03\x02\x02\x02\xD3\u024B' +
        '\x03\x02\x02\x02\xD5\u0257\x03\x02\x02\x02\xD7\u025D\x03\x02\x02\x02\xD9' +
        '\u0260\x03\x02\x02\x02\xDB\u0265\x03\x02\x02\x02\xDD\u0268\x03\x02\x02' +
        '\x02\xDF\xE0\x05\v\x06\x02\xE0\x04\x03\x02\x02\x02\xE1\xE2\x05\x13\n\x02' +
        '\xE2\x06\x03\x02\x02\x02\xE3\xE4\x05\v\x06\x02\xE4\xE5\x05\r\x07\x02\xE5' +
        '\b\x03\x02\x02\x02\xE6\xE7\x05\x0F\b\x02\xE7\xE8\x05\x11\t\x02\xE8\n\x03' +
        '\x02\x02\x02\xE9\xEA\x07\u82E7\x02\x02\xEA\f\x03\x02\x02\x02\xEB\xEC\x07' +
        '\u9760\x02\x02\xEC\x0E\x03\x02\x02\x02\xED\xEE\x07\u4E45\x02\x02\xEE\x10' +
        '\x03\x02\x02\x02\xEF\xF0\x07\u5F99\x02\x02\xF0\x12\x03\x02\x02\x02\xF1' +
        '\xF2\x07\u8007\x02\x02\xF2\x14\x03\x02\x02\x02\xF3\xF5\x05s:\x02\xF4\xF6' +
        '\x05w<\x02\xF5\xF4\x03\x02\x02\x02\xF5\xF6\x03\x02\x02\x02\xF6\xF7\x03' +
        '\x02\x02\x02\xF7\xF8\x05#\x12\x02\xF8\xF9\x05}?\x02\xF9\xFA\x05\x81A\x02' +
        '\xFA\x16\x03\x02\x02\x02\xFB\xFC\x05m7\x02\xFC\xFD\x05y=\x02\xFD\x18\x03' +
        '\x02\x02\x02\xFE\xFF\x07\u300C\x02\x02\xFF\x1A\x03\x02\x02\x02\u0100\u0101' +
        '\x07\u300D\x02\x02\u0101\x1C\x03\x02\x02\x02\u0102\u0103\x07>\x02\x02' +
        '\u0103\u0104\x07>\x02\x02\u0104\x1E\x03\x02\x02\x02\u0105\u0106\x07@\x02' +
        '\x02\u0106\u0107\x07@\x02\x02\u0107 \x03\x02\x02\x02\u0108\u0109\x07\u8F7F' +
        '\x02\x02\u0109"\x03\x02\x02\x02\u010A\u010B\t\x02\x02\x02\u010B$\x03' +
        '\x02\x02\x02\u010C\u010E\x05+\x16\x02\u010D\u010F\x05\xCDg\x02\u010E\u010D' +
        '\x03\x02\x02\x02\u010F\u0110\x03\x02\x02\x02\u0110\u010E\x03\x02\x02\x02' +
        '\u0110\u0111\x03\x02\x02\x02\u0111\u0112\x03\x02\x02\x02\u0112\u0113\x05' +
        "-\x17\x02\u0113\u011D\x03\x02\x02\x02\u0114\u0116\x05\'\x14\x02\u0115" +
        '\u0117\x05\xCDg\x02\u0116\u0115\x03\x02\x02\x02\u0117\u0118\x03\x02\x02' +
        '\x02\u0118\u0116\x03\x02\x02\x02\u0118\u0119\x03\x02\x02\x02\u0119\u011A' +
        '\x03\x02\x02\x02\u011A\u011B\x05)\x15\x02\u011B\u011D\x03\x02\x02\x02' +
        '\u011C\u010C\x03\x02\x02\x02\u011C\u0114\x03\x02\x02\x02\u011D&\x03\x02' +
        '\x02\x02\u011E\u011F\x07]\x02\x02\u011F(\x03\x02\x02\x02\u0120\u0121\x07' +
        '_\x02\x02\u0121*\x03\x02\x02\x02\u0122\u0123\x07\u300E\x02\x02\u0123,' +
        '\x03\x02\x02\x02\u0124\u0125\x07\u300F\x02\x02\u0125.\x03\x02\x02\x02' +
        '\u0126\u0127\x05;\x1E\x02\u01270\x03\x02\x02\x02\u0128\u0129\x05\xC9e' +
        '\x02\u01292\x03\x02\x02\x02\u012A\u012B\x05=\x1F\x02\u012B4\x03\x02\x02' +
        '\x02\u012C\u012D\x05A!\x02\u012D6\x03\x02\x02\x02\u012E\u012F\x05? \x02' +
        '\u012F8\x03\x02\x02\x02\u0130\u0131\x05C"\x02\u0131:\x03\x02\x02\x02' +
        '\u0132\u0133\x07\u65BF\x02\x02\u0133<\x03\x02\x02\x02\u0134\u0135\x07' +
        '\u5167\x02\x02\u0135>\x03\x02\x02\x02\u0136\u0137\x07\u6C44\x02\x02\u0137' +
        '@\x03\x02\x02\x02\u0138\u0139\x07\u53D8\x02\x02\u0139B\x03\x02\x02\x02' +
        '\u013A\u013B\x07\u5F99\x02\x02\u013BD\x03\x02\x02\x02\u013C\u013D\x05' +
        '\x7F@\x02\u013DF\x03\x02\x02\x02\u013E\u013F\x05I%\x02\u013F\u0140\x05' +
        'I%\x02\u0140H\x03\x02\x02\x02\u0141\u0142\t\x03\x02\x02\u0142J\x03\x02' +
        '\x02\x02\u0143\u0144\x05]/\x02\u0144\u0145\x05Y-\x02\u0145\u0146\x05{' +
        '>\x02\u0146L\x03\x02\x02\x02\u0147\u0148\x05[.\x02\u0148\u0149\v\x02\x02' +
        '\x02\u0149\u014A\x05a1\x02\u014AN\x03\x02\x02\x02\u014B\u014C\x05S*\x02' +
        '\u014C\u014D\x05U+\x02\u014D\u014E\x05]/\x02\u014E\u014F\x05Y-\x02\u014F' +
        '\u0150\x07\u5FC7\x02\x02\u0150\u0151\x07\u514A\x02\x02\u0151\u0152\x07' +
        '\u5F99\x02\x02\u0152\u0153\x03\x02\x02\x02\u0153\u0154\x05\xABV\x02\u0154' +
        'P\x03\x02\x02\x02\u0155\u0156\x05\x0F\b\x02\u0156\u0157\x05U+\x02\u0157' +
        'R\x03\x02\x02\x02\u0158\u0159\x07\u6B34\x02\x02\u0159T\x03\x02\x02\x02' +
        '\u015A\u015B\x07\u884E\x02\x02\u015BV\x03\x02\x02\x02\u015C\u015D\x05' +
        'k6\x02\u015D\u015E\x05Y-\x02\u015EX\x03\x02\x02\x02\u015F\u0160\t\x04' +
        '\x02\x02\u0160Z\x03\x02\x02\x02\u0161\u0162\x05c2\x02\u0162\u0163\x05' +
        '\x87D\x02\u0163\\\x03\x02\x02\x02\u0164\u0165\x05c2\x02\u0165^\x03\x02' +
        '\x02\x02\u0166\u0167\x05\x87D\x02\u0167`\x03\x02\x02\x02\u0168\u0169\x05' +
        'e3\x02\u0169\u016A\x05Y-\x02\u016A\u016B\x05g4\x02\u016Bb\x03\x02\x02' +
        '\x02\u016C\u016D\x07\u6631\x02\x02\u016Dd\x03\x02\x02\x02\u016E\u016F' +
        '\x07\u4E4D\x02\x02\u016Ff\x03\x02\x02\x02\u0170\u0171\x07\u4E61\x02\x02' +
        '\u0171h\x03\x02\x02\x02\u0172\u0174\x05\x13\n\x02\u0173\u0172\x03\x02' +
        '\x02\x02\u0173\u0174\x03\x02\x02\x02\u0174\u0175\x03\x02\x02\x02\u0175' +
        '\u0176\x05g4\x02\u0176j\x03\x02\x02\x02\u0177\u017D\x05m7\x02\u0178\u017D' +
        '\x05o8\x02\u0179\u017D\x05q9\x02\u017A\u017D\x05s:\x02\u017B\u017D\x05' +
        'u;\x02\u017C\u0177\x03\x02\x02\x02\u017C\u0178\x03\x02\x02\x02\u017C\u0179' +
        '\x03\x02\x02\x02\u017C\u017A\x03\x02\x02\x02\u017C\u017B\x03\x02\x02\x02' +
        '\u017C\u017D\x03\x02\x02\x02\u017D\u017E\x03\x02\x02\x02\u017E\u0180\x05' +
        's:\x02\u017F\u0181\x05w<\x02\u0180\u017F\x03\x02\x02\x02\u0180\u0181\x03' +
        '\x02\x02\x02\u0181l\x03\x02\x02\x02\u0182\u0183\x07\u4ECC\x02\x02\u0183' +
        'n\x03\x02\x02\x02\u0184\u0185\x07\u5440\x02\x02\u0185p\x03\x02\x02\x02' +
        '\u0186\u0187\x07\u517B\x02\x02\u0187r\x03\x02\x02\x02\u0188\u0189\x07' +
        '\u670B\x02\x02\u0189t\x03\x02\x02\x02\u018A\u018B\x07\u53CA\x02\x02\u018B' +
        'v\x03\x02\x02\x02\u018C\u018D\x07\u4E02\x02\x02\u018Dx\x03\x02\x02\x02' +
        '\u018E\u0190\x05}?\x02\u018F\u0191\x05\x7F@\x02\u0190\u018F\x03\x02\x02' +
        '\x02\u0190\u0191\x03\x02\x02\x02\u0191\u0192\x03\x02\x02\x02\u0192\u0193' +
        '\x05\x81A\x02\u0193\u01A5\x03\x02\x02\x02\u0194\u0195\x05}?\x02\u0195' +
        '\u0197\x05\x7F@\x02\u0196\u0198\x05\x81A\x02\u0197\u0196\x03\x02\x02\x02' +
        '\u0197\u0198\x03\x02\x02\x02\u0198\u01A5\x03\x02\x02\x02\u0199\u019B\x05' +
        '\x83B\x02\u019A\u0199\x03\x02\x02\x02\u019A\u019B\x03\x02\x02\x02\u019B' +
        '\u019C\x03\x02\x02\x02\u019C\u019D\x05\x85C\x02\u019D\u019E\x05\x87D\x02' +
        '\u019E\u01A5\x03\x02\x02\x02\u019F\u01A0\x05\x87D\x02\u01A0\u01A2\x05' +
        '\x7F@\x02\u01A1\u01A3\x05\x81A\x02\u01A2\u01A1\x03\x02\x02\x02\u01A2\u01A3' +
        '\x03\x02\x02\x02\u01A3\u01A5\x03\x02\x02\x02\u01A4\u018E\x03\x02\x02\x02' +
        '\u01A4\u0194\x03\x02\x02\x02\u01A4\u019A\x03\x02\x02\x02\u01A4\u019F\x03' +
        '\x02\x02\x02\u01A5z\x03\x02\x02\x02\u01A6\u01A7\x05\x81A\x02\u01A7|\x03' +
        '\x02\x02\x02\u01A8\u01A9\x07\u540F\x02\x02\u01A9~\x03\x02\x02\x02\u01AA' +
        '\u01AB\x07\u4E4D\x02\x02\u01AB\x80\x03\x02\x02\x02\u01AC\u01AD\x07\u66F2' +
        '\x02\x02\u01AD\x82\x03\x02\x02\x02\u01AE\u01AF\x07\u6B66\x02\x02\u01AF' +
        '\x84\x03\x02\x02\x02\u01B0\u01B1\x07\u6242\x02\x02\u01B1\x86\x03\x02\x02' +
        '\x02\u01B2\u01B3\t\x05\x02\x02\u01B3\x88\x03\x02\x02\x02\u01B4\u01B5\x05' +
        'k6\x02\u01B5\u01B6\x05\x8DG\x02\u01B6\x8A\x03\x02\x02\x02\u01B7\u01B9' +
        '\x05\x89E\x02\u01B8\u01BA\x05{>\x02\u01B9\u01B8\x03\x02\x02\x02\u01B9' +
        '\u01BA\x03\x02\x02\x02\u01BA\x8C\x03\x02\x02\x02\u01BB\u01BC\x07\u8A02' +
        '\x02\x02\u01BC\x8E\x03\x02\x02\x02\u01BD\u01BE\x05\x97L\x02\u01BE\u01BF' +
        '\x05\x99M\x02\u01BF\u01C7\x03\x02\x02\x02\u01C0\u01C1\x05\x9BN\x02\u01C1' +
        '\u01C2\x05\x9DO\x02\u01C2\u01C7\x03\x02\x02\x02\u01C3\u01C4\x05\x9FP\x02' +
        '\u01C4\u01C5\x05\x9FP\x02\u01C5\u01C7\x03\x02\x02\x02\u01C6\u01BD\x03' +
        '\x02\x02\x02\u01C6\u01C0\x03\x02\x02\x02\u01C6\u01C3\x03\x02\x02\x02\u01C7' +
        '\x90\x03\x02\x02\x02\u01C8\u01CA\x05\x97L\x02\u01C9\u01CB\x05\xA1Q\x02' +
        '\u01CA\u01C9\x03\x02\x02\x02\u01CB\u01CC\x03\x02\x02\x02\u01CC\u01CD\x03' +
        '\x02\x02\x02\u01CC\u01CA\x03\x02\x02\x02\u01CD\u01CE\x03\x02\x02\x02\u01CE' +
        '\u01CF\x05\x99M\x02\u01CF\x92\x03\x02\x02\x02\u01D0\u01D2\x05\x9BN\x02' +
        '\u01D1\u01D3\x05\xA3R\x02\u01D2\u01D1\x03\x02\x02\x02\u01D3\u01D4\x03' +
        '\x02\x02\x02\u01D4\u01D2\x03\x02\x02\x02\u01D4\u01D5\x03\x02\x02\x02\u01D5' +
        '\u01D6\x03\x02\x02\x02\u01D6\u01D7\x05\x9DO\x02\u01D7\x94\x03\x02\x02' +
        '\x02\u01D8\u01DA\x05\x9FP\x02\u01D9\u01DB\x05\xA5S\x02\u01DA\u01D9\x03' +
        '\x02\x02\x02\u01DB\u01DC\x03\x02\x02\x02\u01DC\u01DA\x03\x02\x02\x02\u01DC' +
        '\u01DD\x03\x02\x02\x02\u01DD\u01DE\x03\x02\x02\x02\u01DE\u01DF\x05\x9F' +
        'P\x02\u01DF\x96\x03\x02\x02\x02\u01E0\u01E1\x07\u300E\x02\x02\u01E1\u01E2' +
        '\x07\u300E\x02\x02\u01E2\x98\x03\x02\x02\x02\u01E3\u01E4\x07\u300F\x02' +
        '\x02\u01E4\u01E5\x07\u300F\x02\x02\u01E5\x9A\x03\x02\x02\x02\u01E6\u01E7' +
        '\x07\u3010\x02\x02\u01E7\x9C\x03\x02\x02\x02\u01E8\u01E9\x07\u3011\x02' +
        '\x02\u01E9\x9E\x03\x02\x02\x02\u01EA\u01EB\x07$\x02\x02\u01EB\xA0\x03' +
        '\x02\x02\x02\u01EC\u01ED\x07^\x02\x02\u01ED\u01F0\t\x06\x02\x02\u01EE' +
        '\u01F0\n\x07\x02\x02\u01EF\u01EC\x03\x02\x02\x02\u01EF\u01EE\x03\x02\x02' +
        '\x02\u01F0\xA2\x03\x02\x02\x02\u01F1\u01F2\x07^\x02\x02\u01F2\u01F5\t' +
        '\x06\x02\x02\u01F3\u01F5\n\x07\x02\x02\u01F4\u01F1\x03\x02\x02\x02\u01F4' +
        '\u01F3\x03\x02\x02\x02\u01F5\xA4\x03\x02\x02\x02\u01F6\u01F7\x07^\x02' +
        '\x02\u01F7\u01FA\t\x06\x02\x02\u01F8\u01FA\n\x07\x02\x02\u01F9\u01F6\x03' +
        '\x02\x02\x02\u01F9\u01F8\x03\x02\x02\x02\u01FA\xA6\x03\x02\x02\x02\u01FB' +
        '\u01FC\x05k6\x02\u01FC\u01FD\x05\xABV\x02\u01FD\xA8\x03\x02\x02\x02'
    private static readonly _serializedATNSegment1: string =
        '\u01FE\u0200\x05\xA7T\x02\u01FF\u0201\x05{>\x02\u0200\u01FF\x03\x02\x02' +
        '\x02\u0200\u0201\x03\x02\x02\x02\u0201\xAA\x03\x02\x02\x02\u0202\u0203' +
        '\t\b\x02\x02\u0203\xAC\x03\x02\x02\x02\u0204\u0205\t\t\x02\x02\u0205\xAE' +
        '\x03\x02\x02\x02\u0206\u0209\t\n\x02\x02\u0207\u0209\x05\xADW\x02\u0208' +
        '\u0206\x03\x02\x02\x02\u0208\u0207\x03\x02\x02\x02\u0209\xB0\x03\x02\x02' +
        '\x02\u020A\u020B\t\v\x02\x02\u020B\xB2\x03\x02\x02\x02\u020C\u020F\t\f' +
        '\x02\x02\u020D\u020F\x05\xB1Y\x02\u020E\u020C\x03\x02\x02\x02\u020E\u020D' +
        '\x03\x02\x02\x02\u020F\xB4\x03\x02\x02\x02\u0210\u0211\x05k6\x02\u0211' +
        '\u0212\x05\xB9]\x02\u0212\xB6\x03\x02\x02\x02\u0213\u0215\x05\xA7T\x02' +
        '\u0214\u0216\x05{>\x02\u0215\u0214\x03\x02\x02\x02\u0215\u0216\x03\x02' +
        '\x02\x02\u0216\xB8\x03\x02\x02\x02\u0217\u0218\x07\u723D\x02\x02\u0218' +
        '\xBA\x03\x02\x02\x02\u0219\u021C\x05\xBD_\x02\u021A\u021C\x05\xBF`\x02' +
        '\u021B\u0219\x03\x02\x02\x02\u021B\u021A\x03\x02\x02\x02\u021C\xBC\x03' +
        '\x02\x02\x02\u021D\u021E\t\r\x02\x02\u021E\xBE\x03\x02\x02\x02\u021F\u0220' +
        '\t\x0E\x02\x02\u0220\xC0\x03\x02\x02\x02\u0221\u0226\x07?\x02\x02\u0222' +
        '\u0223\x05\xC7d\x02\u0223\u0224\x05\xC9e\x02\u0224\u0226\x03\x02\x02\x02' +
        '\u0225\u0221\x03\x02\x02\x02\u0225\u0222\x03\x02\x02\x02\u0226\xC2\x03' +
        '\x02\x02\x02\u0227\u022F\x07\u2262\x02\x02\u0228\u0229\x07#\x02\x02\u0229' +
        '\u022F\x07?\x02\x02\u022A\u022B\x05\xC5c\x02\u022B\u022C\x05\xC7d\x02' +
        '\u022C\u022D\x05\xC9e\x02\u022D\u022F\x03\x02\x02\x02\u022E\u0227\x03' +
        '\x02\x02\x02\u022E\u0228\x03\x02\x02\x02\u022E\u022A\x03\x02\x02\x02\u022F' +
        '\xC4\x03\x02\x02\x02\u0230\u0231\x07\u4E0F\x02\x02\u0231\xC6\x03\x02\x02' +
        '\x02\u0232\u0233\x07\u7B4B\x02\x02\u0233\xC8\x03\x02\x02\x02\u0234\u0235' +
        '\t\x0F\x02\x02\u0235\xCA\x03\x02\x02\x02\u0236\u023A\x05\xCFh\x02\u0237' +
        '\u0239\x05\xCDg\x02\u0238\u0237\x03\x02\x02\x02\u0239\u023C\x03\x02\x02' +
        '\x02\u023A\u0238\x03\x02\x02\x02\u023A\u023B\x03\x02\x02\x02\u023B\xCC' +
        '\x03\x02\x02\x02\u023C\u023A\x03\x02\x02\x02\u023D\u023F\t\x15\x02\x02' +
        '\u023E\u023D\x03\x02\x02\x02\u023F\xCE\x03\x02\x02\x02\u0240\u0241\n\x10' +
        '\x02\x02\u0241\xD0\x03\x02\x02\x02\u0242\u0246\x05\xD7l\x02\u0243\u0245' +
        '\n\x11\x02\x02\u0244\u0243\x03\x02\x02\x02\u0245\u0248\x03\x02\x02\x02' +
        '\u0246\u0244\x03\x02\x02\x02\u0246\u0247\x03\x02\x02\x02\u0247\u0249\x03' +
        '\x02\x02\x02\u0248\u0246\x03\x02\x02\x02\u0249\u024A\bi\x02\x02\u024A' +
        '\xD2\x03\x02\x02\x02\u024B\u024F\x05\xD9m\x02\u024C\u024E\v\x02\x02\x02' +
        '\u024D\u024C\x03\x02\x02\x02\u024E\u0251\x03\x02\x02\x02\u024F\u0250\x03' +
        '\x02\x02\x02\u024F\u024D\x03\x02\x02\x02\u0250\u0252\x03\x02\x02\x02\u0251' +
        '\u024F\x03\x02\x02\x02\u0252\u0253\x05\xD9m\x02\u0253\u0254\x03\x02\x02' +
        '\x02\u0254\u0255\bj\x02\x02\u0255\xD4\x03\x02\x02\x02\u0256\u0258\x05' +
        '\xDBn\x02\u0257\u0256\x03\x02\x02\x02\u0258\u0259\x03\x02\x02\x02\u0259' +
        '\u0257\x03\x02\x02\x02\u0259\u025A\x03\x02\x02\x02\u025A\u025B\x03\x02' +
        '\x02\x02\u025B\u025C\bk\x03\x02\u025C\xD6\x03\x02\x02\x02\u025D\u025E' +
        '\t\x12\x02\x02\u025E\u025F\x05\x81A\x02\u025F\xD8\x03\x02\x02\x02\u0260' +
        '\u0261\t\x12\x02\x02\u0261\u0262\x07\u6BD7\x02\x02\u0262\xDA\x03\x02\x02' +
        '\x02\u0263\u0266\t\x13\x02\x02\u0264\u0266\x05\xDDo\x02\u0265\u0263\x03' +
        '\x02\x02\x02\u0265\u0264\x03\x02\x02\x02\u0266\xDC\x03\x02\x02\x02\u0267' +
        '\u0269\t\x14\x02\x02\u0268\u0267\x03\x02\x02\x02\u0269\xDE\x03\x02\x02' +
        '\x02%\x02\xF5\u0110\u0118\u011C\u0173\u017C\u0180\u0190\u0197\u019A\u01A2' +
        '\u01A4\u01B9\u01C6\u01CC\u01D4\u01DC\u01EF\u01F4\u01F9\u0200\u0208\u020E' +
        '\u0215\u021B\u0225\u022E\u023A\u023E\u0246\u024F\u0259\u0265\u0268\x04' +
        '\x02\x03\x02\b\x02\x02'
    public static readonly _serializedATN: string = Utils.join(
        [
            WenyanLexer._serializedATNSegment0,
            WenyanLexer._serializedATNSegment1,
        ],
        '',
    )
    public static __ATN: ATN
    public static get _ATN(): ATN {
        if (!WenyanLexer.__ATN) {
            WenyanLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(WenyanLexer._serializedATN))
        }

        return WenyanLexer.__ATN
    }

}

