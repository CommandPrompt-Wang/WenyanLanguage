// Generated from Wenyan.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from 'antlr4ts/atn/ATN'
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer'
import { CharStream } from 'antlr4ts/CharStream'
import { Lexer } from 'antlr4ts/Lexer'
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator'
import { NotNull } from 'antlr4ts/Decorators'
import { Override } from 'antlr4ts/Decorators'
import { RuleContext } from 'antlr4ts/RuleContext'
import { Vocabulary } from 'antlr4ts/Vocabulary'
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl'

import * as Utils from 'antlr4ts/misc/Utils'


export class WenyanLexer extends Lexer {
    public static readonly If = 1
    public static readonly EndDeclare = 2
    public static readonly Else = 3
    public static readonly Return = 4
    public static readonly EndStatment = 5
    public static readonly IHave = 6
    public static readonly NameAs = 7
    public static readonly ValueIs = 8
    public static readonly DeclareString = 9
    public static readonly DeclareStringIs = 10
    public static readonly StringEmpty = 11
    public static readonly StringEscape1 = 12
    public static readonly StringEscape2 = 13
    public static readonly StringEscape3 = 14
    public static readonly DeclareDigit = 15
    public static readonly DeclareDigitIs = 16
    public static readonly DeclareBoolean = 17
    public static readonly DeclareBooleanIs = 18
    public static readonly Boolean = 19
    public static readonly True = 20
    public static readonly False = 21
    public static readonly Left = 22
    public static readonly Right = 23
    public static readonly Left3 = 24
    public static readonly Right3 = 25
    public static readonly FunctionStart = 26
    public static readonly FunctionEnd = 27
    public static readonly VariableStart = 28
    public static readonly VariableEnd = 29
    public static readonly DeclareMethod = 30
    public static readonly ThisIs = 31
    public static readonly Is = 32
    public static readonly Said = 33
    public static readonly MethodOf = 34
    public static readonly The = 35
    public static readonly At = 36
    public static readonly Apply = 37
    public static readonly End = 38
    public static readonly Number = 39
    public static readonly Digit = 40
    public static readonly Equal = 41
    public static readonly Unequal = 42
    public static readonly Identifier = 43
    public static readonly Character = 44
    public static readonly Underline = 45
    public static readonly LineComment = 46
    public static readonly PartComment = 47
    public static readonly WhiteSpace = 48

    // tslint:disable:no-trailing-whitespace
    public static readonly channelNames: string[] = [
        'DEFAULT_TOKEN_CHANNEL', 'HIDDEN',
    ]

    // tslint:disable:no-trailing-whitespace
    public static readonly modeNames: string[] = [
        'DEFAULT_MODE',
    ]

    public static readonly ruleNames: string[] = [
        'If', 'EndDeclare', 'Else', 'Return', 'Ruo', 'Fei', 'Nai', 'De', 'Zhe', 
        'EndStatment', 'IHave', 'Jin', 'Wu', 'Zi', 'You', 'You2', 'Yi', 'NameAs', 
        'ValueIs', 'Ming', 'Zhi', 'Yue', 'Ci', 'Suo', 'Wei', 'DeclareString', 
        'DeclareStringIs', 'Yan', 'StringEmpty', 'StringEscape1', 'StringEscape2', 
        'StringEscape3', 'Left2', 'Right2', 'Left4', 'Right4', 'String3', 'NonEscape', 
        'DeclareDigit', 'DeclareDigitIs', 'Shu', 'DeclareBoolean', 'DeclareBooleanIs', 
        'Bo', 'Boolean', 'True', 'False', 'Left', 'Right', 'Left3', 'Right3', 
        'FunctionStart', 'FunctionEnd', 'VariableStart', 'VariableEnd', 'Yu2', 
        'Xing', 'DeclareMethod', 'Shu2', 'ThisIs', 'Is', 'Said', 'MethodOf', 'Shi', 
        'Of', 'Ye', 'The', 'At', 'Apply', 'Shi2', 'Yu', 'End', 'Yun', 'Number', 
        'Digit', 'Equal', 'Unequal', 'Bu', 'Den', 'Identifier', 'Character', 'Underline', 
        'ForbiddenHead', 'LineComment', 'PartComment', 'WhiteSpace', 'CommentStart', 
        'Comment', 'UnicodeWhiteSpace', 'Delimiter',
    ]

    private static readonly _LITERAL_NAMES: Array<string | undefined> = [
        undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
        undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
        undefined, undefined, undefined, undefined, undefined, undefined, "'\u9633'", 
        "'\u9634'", "'\u300C'", "'\u300D'", "'['", "']'",
    ]
    private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
        undefined, 'If', 'EndDeclare', 'Else', 'Return', 'EndStatment', 'IHave', 
        'NameAs', 'ValueIs', 'DeclareString', 'DeclareStringIs', 'StringEmpty', 
        'StringEscape1', 'StringEscape2', 'StringEscape3', 'DeclareDigit', 'DeclareDigitIs', 
        'DeclareBoolean', 'DeclareBooleanIs', 'Boolean', 'True', 'False', 'Left', 
        'Right', 'Left3', 'Right3', 'FunctionStart', 'FunctionEnd', 'VariableStart', 
        'VariableEnd', 'DeclareMethod', 'ThisIs', 'Is', 'Said', 'MethodOf', 'The', 
        'At', 'Apply', 'End', 'Number', 'Digit', 'Equal', 'Unequal', 'Identifier', 
        'Character', 'Underline', 'LineComment', 'PartComment', 'WhiteSpace',
    ]
    public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(WenyanLexer._LITERAL_NAMES, WenyanLexer._SYMBOLIC_NAMES, [])

    // @Override
    // @NotNull
    public get vocabulary(): Vocabulary {
        return WenyanLexer.VOCABULARY
    }
    // tslint:enable:no-trailing-whitespace


    constructor(input: CharStream) {
        super(input)
        this._interp = new LexerATNSimulator(WenyanLexer._ATN, this)
    }

    // @Override
    public get grammarFileName(): string { return 'Wenyan.g4' }

    // @Override
    public get ruleNames(): string[] { return WenyanLexer.ruleNames }

    // @Override
    public get serializedATN(): string { return WenyanLexer._serializedATN }

    // @Override
    public get channelNames(): string[] { return WenyanLexer.channelNames }

    // @Override
    public get modeNames(): string[] { return WenyanLexer.modeNames }

    public static readonly _serializedATN: string =
        '\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x022\u0203\b\x01' +
        '\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06' +
        '\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r' +
        '\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t' +
        '\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t' +
        '\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t' +
        '\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04"\t' +
        "\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
        '+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04' +
        '4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04' +
        '=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04' +
        'F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04M\tM\x04N\tN\x04' +
        'O\tO\x04P\tP\x04Q\tQ\x04R\tR\x04S\tS\x04T\tT\x04U\tU\x04V\tV\x04W\tW\x04' +
        'X\tX\x04Y\tY\x04Z\tZ\x04[\t[\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03' +
        '\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03' +
        '\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x05\v\xCD\n\v\x03\v\x03\v\x03\f' +
        '\x03\f\x03\f\x03\f\x03\f\x05\f\xD6\n\f\x03\f\x03\f\x05\f\xDA\n\f\x03\r' +
        '\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11' +
        '\x03\x12\x03\x12\x03\x13\x03\x13\x05\x13\xEA\n\x13\x03\x13\x03\x13\x03' +
        '\x13\x03\x13\x03\x13\x05\x13\xF1\n\x13\x03\x13\x05\x13\xF4\n\x13\x03\x13' +
        '\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x05\x13\xFC\n\x13\x05\x13\xFE' +
        '\n\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17' +
        '\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B' +
        '\x03\x1C\x03\x1C\x05\x1C\u0113\n\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03' +
        '\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x05\x1E\u0120\n\x1E' +
        '\x03\x1F\x03\x1F\x06\x1F\u0124\n\x1F\r\x1F\x0E\x1F\u0125\x03\x1F\x03\x1F' +
        '\x03 \x03 \x06 \u012C\n \r \x0E \u012D\x03 \x03 \x03!\x03!\x06!\u0134' +
        '\n!\r!\x0E!\u0135\x03!\x03!\x03"\x03"\x03"\x03#\x03#\x03#\x03$\x03' +
        "$\x03%\x03%\x03&\x03&\x03\'\x03\'\x03\'\x05\'\u0149\n\'\x03(\x03(\x03" +
        '(\x03)\x03)\x05)\u0150\n)\x03*\x03*\x03+\x03+\x03+\x03,\x03,\x05,\u0159' +
        '\n,\x03-\x03-\x03.\x03.\x05.\u015F\n.\x03/\x03/\x030\x030\x031\x031\x03' +
        '2\x032\x033\x033\x034\x034\x035\x035\x035\x035\x036\x036\x036\x036\x03' +
        '7\x037\x037\x037\x037\x037\x037\x037\x037\x037\x037\x038\x038\x038\x03' +
        '9\x039\x03:\x03:\x03;\x03;\x03;\x03<\x03<\x03=\x03=\x03=\x03>\x03>\x03' +
        '?\x03?\x03@\x03@\x03@\x03@\x03A\x03A\x03B\x03B\x03C\x03C\x03D\x03D\x03' +
        'E\x03E\x03F\x03F\x03G\x03G\x03H\x03H\x03I\x03I\x03I\x03J\x03J\x03K\x06' +
        'K\u01AD\nK\rK\x0EK\u01AE\x03K\x06K\u01B2\nK\rK\x0EK\u01B3\x05K\u01B6\n' +
        'K\x03L\x05L\u01B9\nL\x03M\x03M\x03M\x03M\x05M\u01BF\nM\x03N\x03N\x03N' +
        '\x03N\x03N\x03N\x03N\x05N\u01C8\nN\x03O\x03O\x03P\x03P\x03Q\x03Q\x07Q' +
        '\u01D0\nQ\fQ\x0EQ\u01D3\vQ\x03R\x03R\x05R\u01D7\nR\x03S\x03S\x03T\x03' +
        'T\x03U\x03U\x07U\u01DF\nU\fU\x0EU\u01E2\vU\x03U\x03U\x03V\x03V\x07V\u01E8' +
        '\nV\fV\x0EV\u01EB\vV\x03V\x03V\x03V\x03V\x03W\x06W\u01F2\nW\rW\x0EW\u01F3' +
        '\x03W\x03W\x03X\x03X\x03X\x03Y\x03Y\x03Y\x03Z\x03Z\x05Z\u0200\nZ\x03[' +
        '\x03[\x03\u01E9\x02\x02\\\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06' +
        '\v\x02\x02\r\x02\x02\x0F\x02\x02\x11\x02\x02\x13\x02\x02\x15\x02\x07\x17' +
        '\x02\b\x19\x02\x02\x1B\x02\x02\x1D\x02\x02\x1F\x02\x02!\x02\x02#\x02\x02' +
        "%\x02\t\'\x02\n)\x02\x02+\x02\x02-\x02\x02/\x02\x021\x02\x023\x02\x02" +
        '5\x02\v7\x02\f9\x02\x02;\x02\r=\x02\x0E?\x02\x0FA\x02\x10C\x02\x02E\x02' +
        '\x02G\x02\x02I\x02\x02K\x02\x02M\x02\x02O\x02\x11Q\x02\x12S\x02\x02U\x02' +
        '\x13W\x02\x14Y\x02\x02[\x02\x15]\x02\x16_\x02\x17a\x02\x18c\x02\x19e\x02' +
        '\x1Ag\x02\x1Bi\x02\x1Ck\x02\x1Dm\x02\x1Eo\x02\x1Fq\x02\x02s\x02\x02u\x02' +
        ' w\x02\x02y\x02!{\x02"}\x02#\x7F\x02$\x81\x02\x02\x83\x02\x02\x85\x02' +
        "\x02\x87\x02%\x89\x02&\x8B\x02\'\x8D\x02\x02\x8F\x02\x02\x91\x02(\x93" +
        '\x02\x02\x95\x02)\x97\x02*\x99\x02+\x9B\x02,\x9D\x02\x02\x9F\x02\x02\xA1' +
        '\x02-\xA3\x02.\xA5\x02/\xA7\x02\x02\xA9\x020\xAB\x021\xAD\x022\xAF\x02' +
        '\x02\xB1\x02\x02\xB3\x02\x02\xB5\x02\x02\x03\x02\x10\x04\x02\u8B04\u8B04' +
        '\u8C15\u8C15\n\x02$$12^^ddhhppttvv\x03\x02^^\x04\x02\u6572\u6572\u657A' +
        '\u657A\x04\x02\u6731\u6731\u8855\u8855\x04\x02\u4E90\u4E90\u65BE\u65BE' +
        '\x03\x022;\x12\x02\u4E02\u4E02\u4E05\u4E05\u4E09\u4E09\u4E0B\u4E0B\u4E5F' +
        '\u4E5F\u4E8E\u4E8E\u4E96\u4E96\u4EC1\u4EC1\u5148\u5148\u516D\u516D\u516F' +
        '\u516F\u5343\u5343\u5345\u5345\u56DD\u56DD\u7680\u7680\u96F8\u96F8\x04' +
        '\x02//aa\x19\x02\x02\u2E81\u3002\u3041\u4E02\u4E02\u4E05\u4E05\u4E09\u4E09' +
        '\u4E0B\u4E0B\u4E5F\u4E5F\u4E8E\u4E8E\u4E96\u4E96\u4EC1\u4EC1\u5148\u5148' +
        '\u516D\u516D\u516F\u516F\u5343\u5343\u5345\u5345\u5440\u5440\u56DD\u56DD' +
        '\u66F2\u66F2\u670B\u670B\u7680\u7680\u9635\u9636\u96F8\u96F8\uFF03\uFF13' +
        '\x04\x02\f\f\x0F\x0F\x05\x02\u627B\u627B\u6CEA\u6CEA\u7591\u7591\f\x02' +
        '\v\x0F""\x87\x87\xA2\xA2\u1682\u1682\u2002\u200C\u202A\u202B\u2031\u2031' +
        '\u2061\u2061\u3002\u3002\b\x02##..==\u3004\u3004\uFF03\uFF03\uFF0E\uFF0E' +
        '\x03<\x02C\x02\\\x02c\x02|\x02\xAC\x02\xAC\x02\xBC\x02\xBC\x02\xC2\x02' +
        '\xD8\x02\xDA\x02\xF8\x02\xFA\x02\u02BA\x02\u02E2\x02\u02E6\x02\u1D02\x02' +
        '\u1D27\x02\u1D2E\x02\u1D5E\x02\u1D64\x02\u1D67\x02\u1D6D\x02\u1D79\x02' +
        '\u1D7B\x02\u1DC0\x02\u1E02\x02\u1F01\x02\u2073\x02\u2073\x02\u2081\x02' +
        '\u2081\x02\u2092\x02\u209E\x02\u212C\x02\u212D\x02\u2134\x02\u2134\x02' +
        '\u2150\x02\u2150\x02\u2162\x02\u218A\x02\u2C62\x02\u2C81\x02\u2E82\x02' +
        '\u2E9B\x02\u2E9D\x02\u2EF5\x02\u2F02\x02\u2FD7\x02\u3007\x02\u3007\x02' +
        '\u3009\x02\u3009\x02\u3023\x02\u302B\x02\u303A\x02\u303D\x02\u3043\x02' +
        '\u3098\x02\u309F\x02\u30A1\x02\u30A3\x02\u30FC\x02\u30FF\x02\u3101\x02' +
        '\u31F2\x02\u3201\x02\u32D2\x02\u3300\x02\u3302\x02\u3359\x02\u3402\x02' +
        '\u4DB7\x02\u4E02\x02\u9FD7\x02\uA724\x02\uA789\x02\uA78D\x02\uA7B0\x02' +
        '\uA7B2\x02\uA7B9\x02\uA7F9\x02\uA801\x02\uAB32\x02\uAB5C\x02\uAB5E\x02' +
        '\uAB66\x02\uF902\x02\uFA6F\x02\uFA72\x02\uFADB\x02\uFB02\x02\uFB08\x02' +
        '\uFF23\x02\uFF3C\x02\uFF43\x02\uFF5C\x02\uFF68\x02\uFF71\x02\uFF73\x02' +
        '\uFF9F\x02\uB002\x03\uB003\x03\uF202\x03\uF202\x03\x02\x04\uA6D8\x04\uA702' +
        '\x04\uB736\x04\uB742\x04\uB81F\x04\uB822\x04\uCEA3\x04\uF802\x04\uFA1F' +
        '\x04\u01FC\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03' +
        '\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03' +
        "\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x025\x03\x02\x02" +
        '\x02\x027\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02' +
        '?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02' +
        '\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02[\x03\x02\x02\x02' +
        '\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03' +
        '\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02' +
        '\x02\x02k\x03\x02\x02\x02\x02m\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02' +
        'u\x03\x02\x02\x02\x02y\x03\x02\x02\x02\x02{\x03\x02\x02\x02\x02}\x03\x02' +
        '\x02\x02\x02\x7F\x03\x02\x02\x02\x02\x87\x03\x02\x02\x02\x02\x89\x03\x02' +
        '\x02\x02\x02\x8B\x03\x02\x02\x02\x02\x91\x03\x02\x02\x02\x02\x95\x03\x02' +
        '\x02\x02\x02\x97\x03\x02\x02\x02\x02\x99\x03\x02\x02\x02\x02\x9B\x03\x02' +
        '\x02\x02\x02\xA1\x03\x02\x02\x02\x02\xA3\x03\x02\x02\x02\x02\xA5\x03\x02' +
        '\x02\x02\x02\xA9\x03\x02\x02\x02\x02\xAB\x03\x02\x02\x02\x02\xAD\x03\x02' +
        '\x02\x02\x03\xB7\x03\x02\x02\x02\x05\xB9\x03\x02\x02\x02\x07\xBB\x03\x02' +
        '\x02\x02\t\xBE\x03\x02\x02\x02\v\xC1\x03\x02\x02\x02\r\xC3\x03\x02\x02' +
        '\x02\x0F\xC5\x03\x02\x02\x02\x11\xC7\x03\x02\x02\x02\x13\xC9\x03\x02\x02' +
        '\x02\x15\xCC\x03\x02\x02\x02\x17\xD5\x03\x02\x02\x02\x19\xDB\x03\x02\x02' +
        '\x02\x1B\xDD\x03\x02\x02\x02\x1D\xDF\x03\x02\x02\x02\x1F\xE1\x03\x02\x02' +
        "\x02!\xE3\x03\x02\x02\x02#\xE5\x03\x02\x02\x02%\xFD\x03\x02\x02\x02\'" +
        '\xFF\x03\x02\x02\x02)\u0101\x03\x02\x02\x02+\u0103\x03\x02\x02\x02-\u0105' +
        '\x03\x02\x02\x02/\u0107\x03\x02\x02\x021\u0109\x03\x02\x02\x023\u010B' +
        '\x03\x02\x02\x025\u010D\x03\x02\x02\x027\u0110\x03\x02\x02\x029\u0114' +
        '\x03\x02\x02\x02;\u011F\x03\x02\x02\x02=\u0121\x03\x02\x02\x02?\u0129' +
        '\x03\x02\x02\x02A\u0131\x03\x02\x02\x02C\u0139\x03\x02\x02\x02E\u013C' +
        '\x03\x02\x02\x02G\u013F\x03\x02\x02\x02I\u0141\x03\x02\x02\x02K\u0143' +
        '\x03\x02\x02\x02M\u0148\x03\x02\x02\x02O\u014A\x03\x02\x02\x02Q\u014D' +
        '\x03\x02\x02\x02S\u0151\x03\x02\x02\x02U\u0153\x03\x02\x02\x02W\u0156' +
        '\x03\x02\x02\x02Y\u015A\x03\x02\x02\x02[\u015E\x03\x02\x02\x02]\u0160' +
        '\x03\x02\x02\x02_\u0162\x03\x02\x02\x02a\u0164\x03\x02\x02\x02c\u0166' +
        '\x03\x02\x02\x02e\u0168\x03\x02\x02\x02g\u016A\x03\x02\x02\x02i\u016C' +
        '\x03\x02\x02\x02k\u0170\x03\x02\x02\x02m\u0174\x03\x02\x02\x02o\u017F' +
        '\x03\x02\x02\x02q\u0182\x03\x02\x02\x02s\u0184\x03\x02\x02\x02u\u0186' +
        '\x03\x02\x02\x02w\u0189\x03\x02\x02\x02y\u018B\x03\x02\x02\x02{\u018E' +
        '\x03\x02\x02\x02}\u0190\x03\x02\x02\x02\x7F\u0192\x03\x02\x02\x02\x81' +
        '\u0196\x03\x02\x02\x02\x83\u0198\x03\x02\x02\x02\x85\u019A\x03\x02\x02' +
        '\x02\x87\u019C\x03\x02\x02\x02\x89\u019E\x03\x02\x02\x02\x8B\u01A0\x03' +
        '\x02\x02\x02\x8D\u01A2\x03\x02\x02\x02\x8F\u01A4\x03\x02\x02\x02\x91\u01A6' +
        '\x03\x02\x02\x02\x93\u01A9\x03\x02\x02\x02\x95\u01B5\x03\x02\x02\x02\x97' +
        '\u01B8\x03\x02\x02\x02\x99\u01BE\x03\x02\x02\x02\x9B\u01C7\x03\x02\x02' +
        '\x02\x9D\u01C9\x03\x02\x02\x02\x9F\u01CB\x03\x02\x02\x02\xA1\u01CD\x03' +
        '\x02\x02\x02\xA3\u01D6\x03\x02\x02\x02\xA5\u01D8\x03\x02\x02\x02\xA7\u01DA' +
        '\x03\x02\x02\x02\xA9\u01DC\x03\x02\x02\x02\xAB\u01E5\x03\x02\x02\x02\xAD' +
        '\u01F1\x03\x02\x02\x02\xAF\u01F7\x03\x02\x02\x02\xB1\u01FA\x03\x02\x02' +
        '\x02\xB3\u01FF\x03\x02\x02\x02\xB5\u0201\x03\x02\x02\x02\xB7\xB8\x05\v' +
        '\x06\x02\xB8\x04\x03\x02\x02\x02\xB9\xBA\x05\x13\n\x02\xBA\x06\x03\x02' +
        '\x02\x02\xBB\xBC\x05\v\x06\x02\xBC\xBD\x05\r\x07\x02\xBD\b\x03\x02\x02' +
        '\x02\xBE\xBF\x05\x0F\b\x02\xBF\xC0\x05\x11\t\x02\xC0\n\x03\x02\x02\x02' +
        '\xC1\xC2\x07\u82E7\x02\x02\xC2\f\x03\x02\x02\x02\xC3\xC4\x07\u9760\x02' +
        '\x02\xC4\x0E\x03\x02\x02\x02\xC5\xC6\x07\u4E45\x02\x02\xC6\x10\x03\x02' +
        '\x02\x02\xC7\xC8\x07\u5F99\x02\x02\xC8\x12\x03\x02\x02\x02\xC9\xCA\x07' +
        '\u8007\x02\x02\xCA\x14\x03\x02\x02\x02\xCB\xCD\x05\x13\n\x02\xCC\xCB\x03' +
        '\x02\x02\x02\xCC\xCD\x03\x02\x02\x02\xCD\xCE\x03\x02\x02\x02\xCE\xCF\x05' +
        '\x85C\x02\xCF\x16\x03\x02\x02\x02\xD0\xD6\x05\x19\r\x02\xD1\xD6\x05\x1B' +
        '\x0E\x02\xD2\xD6\x05\x1D\x0F\x02\xD3\xD6\x05\x1F\x10\x02\xD4\xD6\x05!' +
        '\x11\x02\xD5\xD0\x03\x02\x02\x02\xD5\xD1\x03\x02\x02\x02\xD5\xD2\x03\x02' +
        '\x02\x02\xD5\xD3\x03\x02\x02\x02\xD5\xD4\x03\x02\x02\x02\xD5\xD6\x03\x02' +
        '\x02\x02\xD6\xD7\x03\x02\x02\x02\xD7\xD9\x05\x1F\x10\x02\xD8\xDA\x05#' +
        '\x12\x02\xD9\xD8\x03\x02\x02\x02\xD9\xDA\x03\x02\x02\x02\xDA\x18\x03\x02' +
        '\x02\x02\xDB\xDC\x07\u4ECC\x02\x02\xDC\x1A\x03\x02\x02\x02\xDD\xDE\x07' +
        '\u5440\x02\x02\xDE\x1C\x03\x02\x02\x02\xDF\xE0\x07\u517B\x02\x02\xE0\x1E' +
        '\x03\x02\x02\x02\xE1\xE2\x07\u670B\x02\x02\xE2 \x03\x02\x02\x02\xE3\xE4' +
        '\x07\u53CA\x02\x02\xE4"\x03\x02\x02\x02\xE5\xE6\x07\u4E02\x02\x02\xE6' +
        '$\x03\x02\x02\x02\xE7\xE9\x05)\x15\x02\xE8\xEA\x05+\x16\x02\xE9\xE8\x03' +
        '\x02\x02\x02\xE9\xEA\x03\x02\x02\x02\xEA\xEB\x03\x02\x02\x02\xEB\xEC\x05' +
        '-\x17\x02\xEC\xFE\x03\x02\x02\x02\xED\xEE\x05)\x15\x02\xEE\xF0\x05+\x16' +
        '\x02\xEF\xF1\x05-\x17\x02\xF0\xEF\x03\x02\x02\x02\xF0\xF1\x03\x02\x02' +
        '\x02\xF1\xFE\x03\x02\x02\x02\xF2\xF4\x05/\x18\x02\xF3\xF2\x03\x02\x02' +
        '\x02\xF3\xF4\x03\x02\x02\x02\xF4\xF5\x03\x02\x02\x02\xF5\xF6\x051\x19' +
        '\x02\xF6\xF7\x053\x1A\x02\xF7\xFE\x03\x02\x02\x02\xF8\xF9\x053\x1A\x02' +
        '\xF9\xFB\x05+\x16\x02\xFA\xFC\x05-\x17\x02\xFB\xFA\x03\x02\x02\x02\xFB' +
        '\xFC\x03\x02\x02\x02\xFC\xFE\x03\x02\x02\x02\xFD\xE7\x03\x02\x02\x02\xFD' +
        '\xED\x03\x02\x02\x02\xFD\xF3\x03\x02\x02\x02\xFD\xF8\x03\x02\x02\x02\xFE' +
        '&\x03\x02\x02\x02\xFF\u0100\x05-\x17\x02\u0100(\x03\x02\x02\x02\u0101' +
        '\u0102\x07\u540F\x02\x02\u0102*\x03\x02\x02\x02\u0103\u0104\x07\u4E4D' +
        '\x02\x02\u0104,\x03\x02\x02\x02\u0105\u0106\x07\u66F2\x02\x02\u0106.\x03' +
        '\x02\x02\x02\u0107\u0108\x07\u6B66\x02\x02\u01080\x03\x02\x02\x02\u0109' +
        '\u010A\x07\u6242\x02\x02\u010A2\x03\x02\x02\x02\u010B\u010C\t\x02\x02' +
        '\x02\u010C4\x03\x02\x02\x02\u010D\u010E\x05\x17\f\x02\u010E\u010F\x05' +
        '9\x1D\x02\u010F6\x03\x02\x02\x02\u0110\u0112\x055\x1B\x02\u0111\u0113' +
        "\x05\'\x14\x02\u0112\u0111\x03\x02\x02\x02\u0112\u0113\x03\x02\x02\x02" +
        '\u01138\x03\x02\x02\x02\u0114\u0115\x07\u8A02\x02\x02\u0115:\x03\x02\x02' +
        '\x02\u0116\u0117\x05C"\x02\u0117\u0118\x05E#\x02\u0118\u0120\x03\x02' +
        '\x02\x02\u0119\u011A\x05K&\x02\u011A\u011B\x05K&\x02\u011B\u0120\x03\x02' +
        '\x02\x02\u011C\u011D\x05G$\x02\u011D\u011E\x05I%\x02\u011E\u0120\x03\x02' +
        '\x02\x02\u011F\u0116\x03\x02\x02\x02\u011F\u0119\x03\x02\x02\x02\u011F' +
        '\u011C\x03\x02\x02\x02\u0120<\x03\x02\x02\x02\u0121\u0123\x05C"\x02\u0122' +
        "\u0124\x05M\'\x02\u0123\u0122\x03\x02\x02\x02\u0124\u0125\x03\x02\x02" +
        '\x02\u0125\u0123\x03\x02\x02\x02\u0125\u0126\x03\x02\x02\x02\u0126\u0127' +
        '\x03\x02\x02\x02\u0127\u0128\x05E#\x02\u0128>\x03\x02\x02\x02\u0129\u012B' +
        "\x05C\"\x02\u012A\u012C\x05M\'\x02\u012B\u012A\x03\x02\x02\x02\u012C\u012D" +
        '\x03\x02\x02\x02\u012D\u012B\x03\x02\x02\x02\u012D\u012E\x03\x02\x02\x02' +
        '\u012E\u012F\x03\x02\x02\x02\u012F\u0130\x05E#\x02\u0130@\x03\x02\x02' +
        "\x02\u0131\u0133\x05K&\x02\u0132\u0134\x05M\'\x02\u0133\u0132\x03\x02" +
        '\x02\x02\u0134\u0135\x03\x02\x02\x02\u0135\u0133\x03\x02\x02\x02\u0135' +
        '\u0136\x03\x02\x02\x02\u0136\u0137\x03\x02\x02\x02\u0137\u0138\x05K&\x02' +
        '\u0138B\x03\x02\x02\x02\u0139\u013A\x07\u300E\x02\x02\u013A\u013B\x07' +
        '\u300E\x02\x02\u013BD\x03\x02\x02\x02\u013C\u013D\x07\u300F\x02\x02\u013D' +
        '\u013E\x07\u300F\x02\x02\u013EF\x03\x02\x02\x02\u013F\u0140\x07\u3010' +
        '\x02\x02\u0140H\x03\x02\x02\x02\u0141\u0142\x07\u3011\x02\x02\u0142J\x03' +
        '\x02\x02\x02\u0143\u0144\x07$\x02\x02\u0144L\x03\x02\x02\x02\u0145\u0146' +
        '\x07^\x02\x02\u0146\u0149\t\x03\x02\x02\u0147\u0149\n\x04\x02\x02\u0148' +
        '\u0145\x03\x02\x02\x02\u0148\u0147\x03\x02\x02\x02\u0149N\x03\x02\x02' +
        '\x02\u014A\u014B\x05\x17\f\x02\u014B\u014C\x05S*\x02\u014CP\x03\x02\x02' +
        "\x02\u014D\u014F\x05O(\x02\u014E\u0150\x05\'\x14\x02\u014F\u014E\x03\x02" +
        '\x02\x02\u014F\u0150\x03\x02\x02\x02\u0150R\x03\x02\x02\x02\u0151\u0152' +
        '\t\x05\x02\x02\u0152T\x03\x02\x02\x02\u0153\u0154\x05\x17\f\x02\u0154' +
        '\u0155\x05Y-\x02\u0155V\x03\x02\x02\x02\u0156\u0158\x05O(\x02\u0157\u0159' +
        "\x05\'\x14\x02\u0158\u0157\x03\x02\x02\x02\u0158\u0159\x03\x02\x02\x02" +
        '\u0159X\x03\x02\x02\x02\u015A\u015B\x07\u723D\x02\x02\u015BZ\x03\x02\x02' +
        '\x02\u015C\u015F\x05]/\x02\u015D\u015F\x05_0\x02\u015E\u015C\x03\x02\x02' +
        '\x02\u015E\u015D\x03\x02\x02\x02\u015F\\\x03\x02\x02\x02\u0160\u0161\x07' +
        '\u9635\x02\x02\u0161^\x03\x02\x02\x02\u0162\u0163\x07\u9636\x02\x02\u0163' +
        '`\x03\x02\x02\x02\u0164\u0165\x07\u300E\x02\x02\u0165b\x03\x02\x02\x02' +
        '\u0166\u0167\x07\u300F\x02\x02\u0167d\x03\x02\x02\x02\u0168\u0169\x07' +
        ']\x02\x02\u0169f\x03\x02\x02\x02\u016A\u016B\x07_\x02\x02\u016Bh\x03\x02' +
        "\x02\x02\u016C\u016D\x05{>\x02\u016D\u016E\x05w<\x02\u016E\u016F\x05\'" +
        '\x14\x02\u016Fj\x03\x02\x02\x02\u0170\u0171\x05y=\x02\u0171\u0172\v\x02' +
        '\x02\x02\u0172\u0173\x05\x7F@\x02\u0173l\x03\x02\x02\x02\u0174\u0175\x05' +
        'q9\x02\u0175\u0176\x05s:\x02\u0176\u0177\x05{>\x02\u0177\u0178\x05w<\x02' +
        '\u0178\u0179\x07\u5FC7\x02\x02\u0179\u017A\x07\u514A\x02\x02\u017A\u017B' +
        '\x07\u5F99\x02\x02\u017B\u017C\x03\x02\x02\x02\u017C\u017D\x05\x95K\x02' +
        '\u017D\u017E\x05S*\x02\u017En\x03\x02\x02\x02\u017F\u0180\x05\x0F\b\x02' +
        '\u0180\u0181\x05s:\x02\u0181p\x03\x02\x02\x02\u0182\u0183\x07\u6B34\x02' +
        '\x02\u0183r\x03\x02\x02\x02\u0184\u0185\x07\u884E\x02\x02\u0185t\x03\x02' +
        '\x02\x02\u0186\u0187\x05\x17\f\x02\u0187\u0188\x05w<\x02\u0188v\x03\x02' +
        '\x02\x02\u0189\u018A\t\x06\x02\x02\u018Ax\x03\x02\x02\x02\u018B\u018C' +
        '\x05\x81A\x02\u018C\u018D\x053\x1A\x02\u018Dz\x03\x02\x02\x02\u018E\u018F' +
        '\x05\x81A\x02\u018F|\x03\x02\x02\x02\u0190\u0191\x053\x1A\x02\u0191~\x03' +
        '\x02\x02\x02\u0192\u0193\x05\x83B\x02\u0193\u0194\x05w<\x02\u0194\u0195' +
        '\x05\x85C\x02\u0195\x80\x03\x02\x02\x02\u0196\u0197\x07\u6631\x02\x02' +
        '\u0197\x82\x03\x02\x02\x02\u0198\u0199\x07\u4E4D\x02\x02\u0199\x84\x03' +
        '\x02\x02\x02\u019A\u019B\x07\u4E61\x02\x02\u019B\x86\x03\x02\x02\x02\u019C' +
        '\u019D\x05+\x16\x02\u019D\x88\x03\x02\x02\x02\u019E\u019F\x05\x8FH\x02' +
        '\u019F\x8A\x03\x02\x02\x02\u01A0\u01A1\x05\x8DG\x02\u01A1\x8C\x03\x02' +
        '\x02\x02\u01A2\u01A3\x07\u65BF\x02\x02\u01A3\x8E\x03\x02\x02\x02\u01A4' +
        '\u01A5\t\x07\x02\x02\u01A5\x90\x03\x02\x02\x02\u01A6\u01A7\x05\x93J\x02' +
        '\u01A7\u01A8\x05\x93J\x02\u01A8\x92\x03\x02\x02\x02\u01A9\u01AA\x07\u4E93' +
        '\x02\x02\u01AA\x94\x03\x02\x02\x02\u01AB\u01AD\t\b\x02\x02\u01AC\u01AB' +
        '\x03\x02\x02\x02\u01AD\u01AE\x03\x02\x02\x02\u01AE\u01AC\x03\x02\x02\x02' +
        '\u01AE\u01AF\x03\x02\x02\x02\u01AF\u01B6\x03\x02\x02\x02\u01B0\u01B2\x05' +
        '\x97L\x02\u01B1\u01B0\x03\x02\x02\x02\u01B2\u01B3\x03\x02\x02\x02\u01B3' +
        '\u01B1\x03\x02\x02\x02\u01B3\u01B4\x03\x02\x02\x02\u01B4\u01B6\x03\x02' +
        '\x02\x02\u01B5\u01AC\x03\x02\x02\x02\u01B5\u01B1\x03\x02\x02\x02\u01B6' +
        '\x96\x03\x02\x02\x02\u01B7\u01B9\t\t\x02\x02\u01B8\u01B7\x03\x02\x02\x02' +
        '\u01B9\x98\x03\x02\x02\x02\u01BA\u01BF\x07?\x02\x02\u01BB\u01BC\x05\x9F' +
        'P\x02\u01BC\u01BD\x05\x8FH\x02\u01BD\u01BF\x03\x02\x02\x02\u01BE\u01BA' +
        '\x03\x02\x02\x02\u01BE\u01BB\x03\x02\x02\x02\u01BF\x9A\x03\x02\x02\x02' +
        '\u01C0\u01C8\x07\u2262\x02\x02\u01C1\u01C2\x07#\x02\x02\u01C2\u01C8\x07' +
        '?\x02\x02\u01C3\u01C4\x05\x9DO\x02\u01C4\u01C5\x05\x9FP\x02\u01C5\u01C6' +
        '\x05\x8FH\x02\u01C6\u01C8\x03\x02\x02\x02\u01C7\u01C0\x03\x02\x02\x02' +
        '\u01C7\u01C1\x03\x02\x02\x02\u01C7\u01C3\x03\x02\x02\x02\u01C8\x9C\x03' +
        '\x02\x02\x02\u01C9\u01CA\x07\u4E0F\x02\x02\u01CA\x9E\x03\x02\x02\x02\u01CB' +
        '\u01CC\x07\u7B4B\x02\x02\u01CC\xA0\x03\x02\x02\x02\u01CD\u01D1\x05\xA7' +
        'T\x02\u01CE\u01D0\x05\xA3R\x02\u01CF\u01CE\x03\x02\x02\x02\u01D0\u01D3' +
        '\x03\x02\x02\x02\u01D1\u01CF\x03\x02\x02\x02\u01D1\u01D2\x03\x02\x02\x02' +
        '\u01D2\xA2\x03\x02\x02\x02\u01D3\u01D1\x03\x02\x02\x02\u01D4\u01D7\x05' +
        '\xA5S\x02\u01D5\u01D7\t\x10\x02\x02\u01D6\u01D4\x03\x02\x02\x02\u01D6' +
        '\u01D5\x03\x02\x02\x02\u01D7\xA4\x03\x02\x02\x02\u01D8\u01D9\t\n\x02\x02' +
        '\u01D9\xA6\x03\x02\x02\x02\u01DA\u01DB\n\v\x02\x02\u01DB\xA8\x03\x02\x02' +
        '\x02\u01DC\u01E0\x05\xAFX\x02\u01DD\u01DF\n\f\x02\x02\u01DE\u01DD\x03' +
        '\x02\x02\x02\u01DF\u01E2\x03\x02\x02\x02\u01E0\u01DE\x03\x02\x02\x02\u01E0' +
        '\u01E1\x03\x02\x02\x02\u01E1\u01E3\x03\x02\x02\x02\u01E2\u01E0\x03\x02' +
        '\x02\x02\u01E3\u01E4\bU\x02\x02\u01E4\xAA\x03\x02\x02\x02\u01E5\u01E9' +
        '\x05\xB1Y\x02\u01E6\u01E8\v\x02\x02\x02\u01E7\u01E6\x03\x02\x02\x02\u01E8' +
        '\u01EB\x03\x02\x02\x02\u01E9\u01EA\x03\x02\x02\x02\u01E9\u01E7\x03\x02' +
        '\x02\x02\u01EA\u01EC\x03\x02\x02\x02\u01EB\u01E9\x03\x02\x02\x02\u01EC' +
        '\u01ED\x05\xB1Y\x02\u01ED\u01EE\x03\x02\x02\x02\u01EE\u01EF\bV\x02\x02' +
        '\u01EF\xAC\x03\x02\x02\x02\u01F0\u01F2\x05\xB3Z\x02\u01F1\u01F0\x03\x02' +
        '\x02\x02\u01F2\u01F3\x03\x02\x02\x02\u01F3\u01F1\x03\x02\x02\x02\u01F3' +
        '\u01F4\x03\x02\x02\x02\u01F4\u01F5\x03\x02\x02\x02\u01F5\u01F6\bW\x03' +
        '\x02\u01F6\xAE\x03\x02\x02\x02\u01F7\u01F8\t\r\x02\x02\u01F8\u01F9\x05' +
        '-\x17\x02\u01F9\xB0\x03\x02\x02\x02\u01FA\u01FB\t\r\x02\x02\u01FB\u01FC' +
        '\x07\u6BD7\x02\x02\u01FC\xB2\x03\x02\x02\x02\u01FD\u0200\t\x0E\x02\x02' +
        '\u01FE\u0200\x05\xB5[\x02\u01FF\u01FD\x03\x02\x02\x02\u01FF\u01FE\x03' +
        '\x02\x02\x02\u0200\xB4\x03\x02\x02\x02\u0201\u0202\t\x0F\x02\x02\u0202' +
        '\xB6\x03\x02\x02\x02 \x02\xCC\xD5\xD9\xE9\xF0\xF3\xFB\xFD\u0112\u011F' +
        '\u0125\u012D\u0135\u0148\u014F\u0158\u015E\u01AE\u01B3\u01B5\u01B8\u01BE' +
        '\u01C7\u01D1\u01D6\u01E0\u01E9\u01F3\u01FF\x04\x02\x03\x02\b\x02\x02'
    public static __ATN: ATN
    public static get _ATN(): ATN {
        if (!WenyanLexer.__ATN) {
            WenyanLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(WenyanLexer._serializedATN))
        }

        return WenyanLexer.__ATN
    }

}

